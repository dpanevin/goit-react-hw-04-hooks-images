{"version":3,"sources":["components/ImageFinder/LoadMoreButton/LoadMoreButton.jsx","components/ImageFinder/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageFinder/ImageGallery/ImageGallery.jsx","utils/ImagesApi.js","components/ImageFinder/Searchbar/Searchbar.jsx","components/ImageFinder/Modal/Modal.jsx","components/ImageFinder/ImageFinder.jsx","components/App/App.jsx","index.js"],"names":["LoadMoreButton","onClick","type","className","ImageGalleryItem","image","largeImage","tagsList","openModal","useState","imageUrl","setImageUrl","largeImageUrl","setLargeImageUrl","tags","setTags","useEffect","src","alt","ImageGallery","images","onMoreBtnClick","map","id","webformatURL","largeImageURL","length","ImagesApi","this","searchQuery","page","a","url","fetch","response","json","console","log","newQuery","Searchbar","onSubmit","query","setQuery","e","preventDefault","trim","toast","error","autoComplete","autoFocus","placeholder","onChange","target","value","modalRoot","document","querySelector","Modal","closeModal","data","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","imagesApi","ImageFinder","setImages","status","setStatus","modalData","setModalData","fetchImagesApi","fetchImages","hits","resetPage","incrementPage","prevState","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a15d0823.chunk.js","sourcesContent":["export function LoadMoreButton({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Загрузить ещё\n    </button>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport function ImageGalleryItem({ image, largeImage, tagsList, openModal }) {\n  const [imageUrl, setImageUrl] = useState('');\n  const [largeImageUrl, setLargeImageUrl] = useState('');\n  const [tags, setTags] = useState('');\n\n  useEffect(() => {\n    setImageUrl(image);\n    setLargeImageUrl(largeImage);\n    setTags(tagsList);\n  }, [image, largeImage, tagsList]);\n\n  function onClick() {\n    openModal(largeImageUrl, tags);\n  }\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        onClick={onClick}\n        src={imageUrl}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","import { LoadMoreButton } from '../LoadMoreButton/LoadMoreButton';\nimport { ImageGalleryItem } from './ImageGalleryItem/ImageGalleryItem';\n\nexport function ImageGallery({ images, onMoreBtnClick, openModal }) {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <ImageGalleryItem\n              key={id}\n              image={webformatURL}\n              largeImage={largeImageURL}\n              tagsList={tags}\n              openModal={openModal}\n            />\n          );\n        })}\n      </ul>\n      {images.length !== 0 && <LoadMoreButton onClick={onMoreBtnClick} />}\n    </>\n  );\n}\n","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '21824678-226458aab3f184645846eee2a';\n\nexport default class ImagesApi {\n  constructor() {\n    this.searchQuery = 'cat';\n    this.page = 1;\n  }\n\n  async fetchImages() {\n    const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&per_page=12&page=${this.page}&key=${API_KEY}`;\n\n    try {\n      const response = await fetch(url);\n      const images = await response.json();\n      return images;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  function onChange(e) {\n    setQuery(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введите поисковый запрос.');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  }\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Поиск изображений и фото\"\n          onChange={onChange}\n          value={query}\n        />\n      </form>\n      <Toaster />\n    </header>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ closeModal, data }) {\n  const [url] = useState(data.url);\n  const [tags] = useState(data.tags);\n\n  useEffect(() => {\n    function handleKeyDown(e) {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [closeModal]);\n\n  function OverlayClick(e) {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  }\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={OverlayClick}>\n      <div className=\"Modal\">\n        <img src={url} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n","import { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport ImagesApi from 'utils/ImagesApi';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { Modal } from './Modal/Modal';\n\nconst imagesApi = new ImagesApi();\n\nexport function ImageFinder() {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [modalData, setModalData] = useState(null);\n\n  async function fetchImagesApi() {\n    setStatus('pending');\n\n    const response = await imagesApi.fetchImages();\n    setStatus('resloved');\n    return response.hits;\n  }\n\n  async function onSubmit(query) {\n    imagesApi.resetPage();\n    imagesApi.query = query;\n\n    const images = await fetchImagesApi();\n    setImages(images);\n  }\n\n  async function onMoreBtnClick() {\n    imagesApi.incrementPage();\n\n    const images = await fetchImagesApi();\n    setImages(prevState => [...prevState, ...images]);\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  function openModal(url, tags) {\n    setModalData({ url, tags });\n  }\n\n  function closeModal() {\n    setModalData(null);\n  }\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery\n        images={images}\n        onMoreBtnClick={onMoreBtnClick}\n        openModal={openModal}\n      />\n      {status === 'pending' && (\n        <Loader\n          className=\"Loader\"\n          type=\"Oval\"\n          color=\"rgb(0, 224, 217)\"\n          height={100}\n          width={100}\n        />\n      )}\n\n      {modalData && <Modal data={modalData} closeModal={closeModal} />}\n    </>\n  );\n}\n","import { ImageFinder } from 'components/ImageFinder/ImageFinder';\n\nexport function App() {\n  return (\n    <>\n      <ImageFinder />\n    </>\n  );\n}\n","import 'index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}